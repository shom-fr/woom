[pytest]
# Pytest configuration file for Woom project

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 6.0

# Add options
addopts =
    # Verbose output
#    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Strict markers - fail on unknown markers
    --strict-markers
    # Strict config - fail on unknown config options
    --strict-config
    # Show warnings
    -W default
    # Coverage options (uncomment to enable by default)
    # --cov=woom
    # --cov-report=term-missing
    # --cov-report=html
    # Disable cacheprovider for cleaner output
    # -p no:cacheprovider

# Markers for categorizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may require external resources)
    slow: Slow running tests
    requires_scheduler: Tests that require a real job scheduler
    smoke: Smoke tests (quick validation)
    regression: Regression tests
    wip: Work in progress tests (skip by default)

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(filename)s:%(lineno)d] %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage options
[coverage:run]
source = woom
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */virtualenv/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    # Standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code
    def __repr__
    def __str__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

[coverage:html]
directory = htmlcov
